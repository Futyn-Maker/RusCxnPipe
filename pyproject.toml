[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ruscxnpipe"
version = "0.1.0"
authors = [
    {name = "Andrey Yakuboy", email = "github@yakuboy.ru"},
]
description = "Russian Constructicon Pattern Extraction Pipeline"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
    "Natural Language :: Russian",
]
keywords = [
    "nlp",
    "russian",
    "constructicon",
    "linguistics",
    "pattern-extraction",
    "text-analysis",
    "construction-grammar",
]
dependencies = [
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "pymystem3>=0.2.0",
    "torch>=1.9.0",
    "transformers>=4.21.0",
    "tqdm>=4.62.0",
    "simpletransformers>=0.63.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
]
demo = [
    "gradio>=3.0",
    "streamlit>=1.0",
]

[project.urls]
Homepage = "https://github.com/Futyn-Maker/ruscxnpipe"
"Bug Reports" = "https://github.com/Futyn-Maker/ruscxnpipe/issues"
"Source Code" = "https://github.com/Futyn-Maker/ruscxnpipe"
Documentation = "https://github.com/Futyn-Maker/ruscxnpipe#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["ruscxnpipe*"]

[tool.setuptools.package-data]
ruscxnpipe = ["data/*.json", "data/*.txt"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ruscxnpipe"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pymystem3.*",
    "simpletransformers.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --tb=short"
